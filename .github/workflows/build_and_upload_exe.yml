# This is a basic workflow to help you get started with Actions

name: Build and push executable artifact

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  job_1:
      name: Build and Upload
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v2

      - name: Package Application
        uses: JackMcKew/pyinstaller-action-windows@main
        with:
          path: .
          spec: cli.spec

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: pymodoro
          path: dist/windows
          retention-days: 1

  job_2:
    name: Download and push to executable branch
    needs: job_1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name_suffix: ''
            asset_content_type: application/octet-stream
          - os: windows-latest
            asset_name_suffix: .exe
            asset_content_type: application/octet-stream
          - os: macOS-latest
            asset_name_suffix: ''
            asset_content_type: application/octet-stream
    
    environment: gitinfo      
    
    steps:    
    
    - uses: actions/checkout@v2
      with:
        ref: executable 
        persist-credentials: false
        fetch-depth: 0
        
    - name: Download a Build Artifact
      id: download_artifact
      uses: actions/download-artifact@v2.0.9
      with:
        name: pymodoro
        path: Executable/    
        
    - name: Add and commit
      run: |
          git config --local user.email '${{ secrets.EMAIL }}'
          git config --local user.name '${{ secrets.AUTHOR }}'
          git add Executable/
          git commit -m "New executable"
          
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: executable

    - uses: tubone24/setup-nim-action@v1.0.1
    - name: Install Dependencies
      run: nimble install -d --accept
    - name: Build
      run: nimble build -d:release
    - name: get version
      id: get_version
      run: |
        echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: update release
      id: update_release
      uses: tubone24/update_release@v1.0
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.github_token }}
      with:
        upload_url: ${{ steps.update_release.outputs.upload_url }}
        asset_path: /home/runner/work/pymodoro-gui/pymodoro-gui/Executable/pymodoro.exe
        asset_name: pymodoro_${{ steps.get_version.outputs.VERSION }}.exe
        asset_content_type: ${{ matrix.asset_content_type }}
